version: '3.9'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: my_database
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - spring

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "8089:80"
    depends_on:
      - postgres
    networks:
      - spring

  api-gateway:
    image: api-gateway
    ports:
      - "9000:9000"
    build:
      context: ./api-gateway
      dockerfile: ./Dockerfile
    container_name: api-gateway
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - product-service
      - order-service
      - inventory-service
    networks:
      - spring

  order-service:
    image: order-service
    ports:
      - "8082:8082"
    build:
      context: ./order-service
      dockerfile: ./Dockerfile
    container_name: order-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres-order
    networks:
      - spring

  inventory-service:
    image: inventory-service
    ports:
      - "8083:8083"
    build:
      context: ./inventory-service
    container_name: inventory-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - postgres-inventory
    networks:
      - spring

  product-service:
    image: product-service
    ports:
      - "8084:8084"
    build:
      context: ./product-service
      dockerfile: ./Dockerfile
    container_name: product-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      - mongo
    networks:
      - spring

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    container_name: keycloak
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: postgres
      DB_ADDR: postgres-keycloak
      DB_DATABASE: keycloak
      DB_USER: admin
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./realms/:/opt/keycloak/data/import
    depends_on:
      - postgres-keycloak
    networks:
      - spring

  postgres-keycloak:
    image: postgres:latest
    container_name: postgres-keycloak
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5433:5432"
    volumes:
      - ./data/postgres/keycloak:/var/lib/postgresql/data
    networks:
      - spring

  mongo:
    image: mongo:latest
    container_name: mongo
    ports:
      - "27018:27018"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo/products:/data/db
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - spring

  postgres-order:
    image: postgres:latest
    container_name: postgres-order
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - ./data/postgres/order:/var/lib/postgresql/data
      - ./init/postgres/order/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring

  postgres-inventory:
    image: postgres:latest
    container_name: postgres-inventory
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_DB: inventory-service
    ports:
      - "5469:5432"
    volumes:
      - ./data/postgres/inventory:/var/lib/postgresql/data
      - ./init/postgres/inventory/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - spring

volumes:
  postgres-data:
  postgres-order:
  postgres-inventory:
  mongo:

networks:
  spring:
    driver: bridge
